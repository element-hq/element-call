name: Build & publish images to the package registry for tags

on:
  release:
    types: [published]
  workflow_run:
    workflows: ["Build"]
    branches: [livekit]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_element_call:
    if: ${{ github.event_name == 'release' }}
    uses: ./.github/workflows/element-call.yaml
    with:
      vite_app_version: ${{ github.event.release.tag_name || github.sha }}
    secrets:
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_URL: ${{ secrets.SENTRY_URL }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  publish_tarball:
    needs: build_element_call
    if: always()
    name: Publish tarball
    runs-on: ubuntu-latest
    outputs:
      unix_time: ${{steps.current-time.outputs.unix_time}}
    permissions:
      contents: write # required to upload release asset
      packages: write
    steps:
      - name: Get current time
        id: current-time
        run: echo "unix_time=$(date +'%s')" >> $GITHUB_OUTPUT
      - name: ðŸ“¥ Download artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id || github.run_id }}
          name: build-output
          path: dist
      - name: Create Tarball
        env:
          TARBALL_VERSION: ${{ github.event.release.tag_name || github.sha }}
        run: |
          tar --numeric-owner --transform "s/dist/element-call-${TARBALL_VERSION}/" -cvzf element-call-${TARBALL_VERSION}.tar.gz dist
      - name: Upload
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          path: "./element-call-*.tar.gz"
  publish_docker:
    needs: publish_tarball
    if: always()
    permissions:
      contents: write
      packages: write
    uses: ./.github/workflows/docker.yaml
    with:
      artifact_run_id: ${{ github.event.workflow_run.id || github.run_id }}
      docker_tags: |
        type=sha,format=short,event=branch
        type=semver,pattern=v{{version}}
        type=raw,value=latest-ci,enable={{is_default_branch}}
        type=raw,value=latest-ci_${{needs.publish_tarball.outputs.unix_time}},enable={{is_default_branch}}
